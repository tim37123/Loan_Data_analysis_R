install.packages('ggplot2')
library('ggplot2')
diamonds
summary(diamonds)
diamonds
diamonds = diamonds
diamonds$price
hist(diamonds$price)
summary(diamonds)
subset(diamonds, diamonds$price < 500)
subset(diamonds, diamonds$price < 250)
subset(diamonds, diamonds$price > 15000)
over1500 <- subset(diamonds, diamonds$price > 15000)
sub500 <- subset(diamonds, diamonds$price < 500)
over1500 <- subset(diamonds, diamonds$price >= 15000)
library('ggplot')
install.packages('ggplot')
library('ggplot')
ggplot()
ggplot(aes(x=age, y=friend_count),data=pf) +
geom_point(alpha=1/20) +
xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=pf) +
geom_point(alpha=1/20) +
xlim(13,90)
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20) + xlim(13,90)
library('ggplot2')
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20) + xlim(13,90)
friend_count = friend_count
pf = pf
View(pf)
pf <- pf
ggplot(aes(x=age, y=friend_count), data=pf) + geom_point(alpha=1/20) + xlim(13,90)
data(pf)
install.packages('alr3')
library(alr3)
data(Mitchell)
library(alr3)
install.packages('car')
install.packages('pbkrtest')
library(alr3)
install.packages('pbkrtest')
data('diamonds')
package('ggplot2')
impoort('ggplot2')
import('ggplot2')
library('ggplot2')
data('diamonds')
summary(diamonds)
ggplot(aes(carat, price), data=carat) + geom_scatter()
ggplot(aes(carat, price), data=diamonds) + geom_point()
plot1 <- qplot() + ggtitle('Price')
plot2 <- qplot() + ggtitle('Price (log10)')
grid.arrange()
library(gridExtra)
install.packages('gridExtra')
ggplot(aes(carat, price), data=diamonds) + geom_point()
library(gridExtra)
grid.arrange()
plot1 <- qplot(x = price, data = diamonds) + ggtitle('Price')
plot2 <- qplot(x = log10(price), data = diamonds) + ggtitle('Price (log10)')
grid.arrange()
plot1 <- qplot(x = price, data = diamonds, binwidth = 100) + ggtitle('Price')
plot2 <- qplot(x = log10(price), data = diamonds, binwidth = .01) + ggtitle('Price (log10)')
grid.arrange()
grid.arrange(plot1, plot2, ncol=2)
plot2 <- qplot(x = log10(price), data = diamonds, binwidth = .01) + ggtitle('Price (log10)') + scale_x_log10()
grid.arrange(plot1, plot2, ncol=2)
ggplot(aes(carat, price), data = diamonds) +
geom_jitter(aes(alpha = .5, size=.75)) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
geom_jitter() +
ggplot(aes(carat, price), data = diamonds) +
geom_jitter() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point() +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha=0.5, size-0.75, position = "jitter") +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
ggplot(aes(carat, price), data = diamonds) +
geom_point(alpha=0.5, size=0.75, position = "jitter") +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat')
library(RColorBrewer)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
cuberoot_trans = function() trans_new('cuberoot',
transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
cuberoot_trans = function() trans_new('cuberoot',
transform = function(x) x^(1/3),
inverse = function(x) x^3)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
library(scales)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
?scale_color_brewer
ggplot(aes(x = carat, y = price, color = clarity), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price, color = cut), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Clarity', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Clarity')
ggplot(aes(x = carat, y = price, color = color), data = diamonds) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
scale_color_brewer(type = 'div',
guide = guide_legend(title = 'Color', reverse = T,
override.aes = list(alpha = 1, size = 2))) +
scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
breaks = c(0.2, 0.5, 1, 2, 3)) +
scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
breaks = c(350, 1000, 5000, 10000, 15000)) +
ggtitle('Price (log10) by Cube-Root of Carat and Colorâ€™)
)
)
)
?lm()
exi
exit
stop
()
)))))))))
;
;;;;;;;;
ggplot(midwest, aes(x=c(popwhite, popblack, popamerindian, popasian))) + geom_bar()
library('ggplot2')
library('dplyr')
library('knitr')
data(midwest)
ggplot(midwest, aes(x=c(popwhite, popblack, popamerindian, popasian))) + geom_bar()
coef(lm(percollege~percpovertyknown, data=midwest))
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_abline(intercept=77.12, slope=-.606)
coef(lm(percpovertyknown~percollege, data=midwest))
geom_line(intercept=99.25, slope=-.117)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_line(intercept=99.25, slope=-.117)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_abline(intercept=99.25, slope=-.117)
coef(lm(poptotal~percpovertyknown, data=midwest))
ggplot(midwest, aes(percpovertyknown, poptotal)) + geom_point() +geom_abline(intercept = -277009.888, slope = 3842.438) + scale_x_continuous(limits = c(95, 100))
ggplot(midwest, aes(percpovertyknown, poptotal)) + geom_point() +geom_smooth(method="lm", se = FALSE) + scale_x_continuous(limits = c(95, 100))
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_smooth(method="lm", se=FALSE)
summary(midwest)
head(midwest)
ggplot(midwest, aes(percwhite, percpovertyknown)) + geom_bar()
ggplot(midwest, aes(percwhite, percpovertyknown)) + geom_line()
library("rehsape2")
install.packages("reshape2")
library("rehsape2")
library("reshape2")
minoritydata <- melt(midwest, id=c("percwhite", "percblack", "percamerindan", "percasian", "percother"))
head(minoritydata)
minoritydata <- melt(midwest, id=c("percblack", "percamerindan", "percasian", "percother"))
head(minoritydata)
minoritydata <- melt(midwest, id=c("percblack", "percamerindan", "percasian", "percother", "percpovertyknown"))
head(minoritydata)
ggplot(minoritydata, aes(percpovertyknown)) + geom_line(aes(y=percamerindian), colour="percamerindian")
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y=percamerindian), colour="percamerindian")
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y=percamerindan), colour="percamerindan")
percamerindan
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan"))
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(x = percamerindan, colour = "percamerindan"))
ggplot(midwest, aes(x=percpovertyknown)) + geom_line(aes(x = percamerindan, colour = "percamerindan"))
```
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan"))
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan")) +
geom_line(aes(y = percblack, colour = "percblack")) +
geom_line(aes(y = percasian, colour = "percasian")) +
geom_line(aes(y = percother, colour = "percother"))
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan")) +
geom_line(aes(y = percblack, colour = "percblack")) +
geom_line(aes(y = percasian, colour = "percasian")) +
geom_line(aes(y = percother, colour = "percother")) + scale_x_continuous(limits=c(95,100))
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan")) +
geom_scatter(aes(y = percblack, colour = "percblack")) +
geom_line(aes(y = percasian, colour = "percasian")) +
geom_line(aes(y = percother, colour = "percother"))
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_line(aes(y = percasian, colour = "percasian")) +
geom_line(aes(y = percother, colour = "percother"))
In hindsight this doesn't appear to be how the percentages work, need to clear this column
ggplot(midwest, aes(percpovertyknown)) + geom_line(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother"))
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother"))
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_line(stat="summary", fun.y= mean)
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_line(data=midwest$percblack, stat="summary", fun.y= mean)
geom_line(aes(y=percblack), stat="summary", fun.y= mean)
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_line(aes(y=percblack), stat="summary", fun.y= mean)
geom_smooth(aes(y=percblack), stat="summary", fun.y= mean)
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_smooth(aes(y=percblack), stat="summary", fun.y= mean)
summary(midwest)
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop")
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("pop") +
geom_smooth(aes(y=percblack), method="lm", se=FALSE)
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("Population percent")
summary(midwest)
ggplot(midwest, aes(popdensity)) + geom_histogram()
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=10)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=100)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500)
ggplot(midwest, aes(popdensity)) + geom_jitter()
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500)) + geom_hline(aes(yintercept=1156.21))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + geom_hline(aes(yintercept=1156.21))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + geom_hline(aes(yintercept=1156.21))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = 2000, 4000, 6000, 8000, 10000, 12000)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, colors("green"))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, colour("green"))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color("green"))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color("green"), linetype="longdash")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color="green", linetype="longdash")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color="green", linetype="longdash") + geom_vline(xintercept = 3097.74, color="blue", linetype="longdash")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color="green", linetype="longdash") + geom_vline(xintercept = 3097.74, color="blue", linetype="longdash")
summary(midwest)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_jitter() + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_jitter(aes(alpha=20)) + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_jitter(aes(alpha=50)) + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_jitter(aes(alpha=500)) + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_jitter(aes(alpha=500)) + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point(aes(alpha=500)) + geom_smooth(method="lm", se=FALSE)
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_smooth(method="lm", se=FALSE) + labs(title="Poverty as Educated Population Increases",x="Percent of pop College Educated",y="Percent of pop Poveryy")
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Population Density",x="Huh",y="Population percent")
ggplot(midwest, aes(percollege)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Population Density",y="Population percent")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + ylab("Population percent")
geom_point(aes(y = percother, colour = "percother")) + labs(title="Level of Poverty as Minority Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Level of Poverty as Minority Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Rate of Poverty as Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(percpovertyknown, poptotal)) + geom_point() +geom_smooth(method="lm", se = FALSE) + scale_x_continuous(limits = c(95, 100))
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color="green", linetype="longdash") + geom_vline(xintercept = 3097.74, color="blue", linetype="longdash") + labs(title="Population Density in the Midwest",x="Density",y="Count")
```{r}
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Rate of Poverty as Demographics Increase",x="Povery Percentage",y="Population percent")
```
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Rate of Poverty as Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() + geom_smooth(method="lm", se=FALSE) + labs(title="Poverty as Educated Population Increases",x="Percent of pop College Educated",y="Percent of pop Poverty")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) + scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000, 10000, 12000)) + geom_vline(xintercept = 1156.21, color="green", linetype="longdash") + geom_vline(xintercept = 3097.74, color="blue", linetype="longdash") + labs(title="Population Density in the Midwest",x="Density",y="Count")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) + labs(title="Rate of Poverty as Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan, colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) +
scale_y_continuous(limits=c(0,50)) +
labs(title="Rate of Poverty as Demographics Increase",x="Povery Percentage",y="Population percent")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) +
scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000,
10000, 12000))
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan,
colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) +
scale_y_continuous(limits=c(0,50)) +
labs(title="Rate of Poverty as Demographics Increase",x="Povery
Percentage",y="Population percent")
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) +
scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000,
10000, 12000)) +
geom_vline(xintercept = 1156.21, color="green", linetype="longdash") +
geom_vline(xintercept = 3097.74, color="blue", linetype="longdash") +
labs(title="Population Density in the Midwest",x="Density",y="Count")
ggplot(midwest, aes(percollege, percpovertyknown)) + geom_point() +
geom_smooth(method="lm", se=FALSE) + labs(title="Poverty as Educated Population
Increases",x="Percent of pop College Educated",y="Percent of pop Poverty")
cor.test(midwest$percollege, midwest$percpovertyknown)
cor.test(midwest$perpovertyknown, midwest$percblack)
cor.test(midwest$perpovertyknown, midwest$percasian)
cor.test(midwest$perpovertyknown, midwest$percamerindan)
nrows(midwest$perpovertyknown)
NROWS(midwest$perpovertyknown)
foot(midwest$perpovertyknown)
head(midwest$perpovertyknown)
summary(midwest$perpovertyknown)
summary(midwest)
summary(midwest$percpovertyknown)
cor.test(midwest$percpovertyknown, midwest$percamerindan)
cor.test(midwest$percpovertyknown, midwest$percamerindan)
cor.test(midwest$percpovertyknown, midwest$percblack)
cor.test(midwest$percpovertyknown, midwest$percasian)
cor.test(midwest$percpovertyknown, midwest$perother)
cor.test(midwest$percpovertyknown, midwest$percamerindan)
cor.test(midwest$percpovertyknown, midwest$percblack)
cor.test(midwest$percpovertyknown, midwest$percasian)
cor.test(midwest$percpovertyknown, midwest$percother)
ggplot(midwest, aes(percpovertyknown)) + geom_point(aes(y = percamerindan,
colour = "percamerindan")) +
geom_point(aes(y = percblack, colour = "percblack")) +
geom_point(aes(y = percasian, colour = "percasian")) +
geom_point(aes(y = percother, colour = "percother")) +
scale_y_continuous(limits=c(0,50)) +
labs(title="Rate of Poverty as Demographics Increase",x="Povery
Percentage",y="Population percent")
cor.test(midwest$percamerindan, midwest$percpovertyknown)
cor.test(midwest$percblack, midwest$percpovertyknown)
cor.test(midwest$percasian, midwest$percpovertyknown)
cor.test(midwest$percother, midwest$percpovertyknown)
cor.test(midwest$percpovertyknown, midwest$percblack)
fit <- lm(percblack ~ percpovertyknown, data=midwest)
fit
fit <- lm(percpovertyknown ~ percblack, data=midwest)
fit
fit <- lm(percpovertyknown ~ percblack + percasian + percother + percamerindan, data=midwest)
summary(fit)
ggplot(midwest, aes(popdensity)) + geom_histogram(binwidth=500) +
scale_x_continuous(limits = c(0,12500), breaks = c(2000, 4000, 6000, 8000,
10000, 12000)) +
geom_vline(xintercept = 1156.21, color="green", linetype="longdash") +
geom_vline(xintercept = 3097.74, color="blue", linetype="longdash") +
labs(title="Population Density in the Midwest",x="Density",y="Count")
setwd('~/Desktop/ExploreData/New')
library('ggplot2')
library('knitr')
library('dplyr')
loadData <- read.csv('prosperLoanData.csv')
loanData <- read.csv('prosperLoanData.csv')
loadData <- NULL
summary(loanData)
head(loanData)
ggplot(data=loanData, aes(LoadStatus)) + geom_bar()
ggplot(data=loanData, aes(LoanStatus)) + geom_bar()
loanData <- transform(loanData, unpaid = Chargedoff + Defaulted)
loanData <- transform(loanData, Unpaid = Chargedoff + Defaulted)
loanData$Chargedoff
loanData$LoanStatus.Chargedoff
loanData$LoanStatus$Chargedoff
subset(loanData, LoanStatus == "Chargedoff")
chargedoff <- subset(loanData, LoanStatus == "Chargedoff")
defaulted  <- subset(loanData, LoanStatus == "Defaulted")
sumUnpaid <- chargedoff$LoanStatus + defaulted$LoanStatus
chargedoff$LoanStatus
nrow(defaulted$LoanStatus)
NROW(defaulted$LoanStatus)
NROW(chargedoff$LoanStatus)
sumUnpaid <- NROW(defaulted$LoanStatus) + NROW(chargedoff$LoanStatus)
sumUnpaid
chargedoff <- NROW(subset(loanData, LoanStatus == "Chargedoff"))
chargedoff
sumUnpaid <- chargedoff + defaulted
chargedoff <- subset(loanData, LoanStatus == "Chargedoff")
sumUnpaid
defaulted
chargedoff
chargedoff <- subset(loanData, LoanStatus == "Chargedoff")
defaulted  <- subset(loanData, LoanStatus == "Defaulted")
sumUnpaid <- NROW(defaulted$LoanStatus) + NROW(chargedoff$LoanStatus)
sumUnpaid
loanData$totalUnpaid <- sumUnpaid
ggplot(data=loanData, aes(LoanStatus)) + geom_bar()
head(loanData$totalUnpaid)
loanData$LoanStatus['Chargedoff']
loanData$LoanStatus[Chargedoff]
loanData$LoanStatus('Chargedoff')
loanData$LoanStatus(Chargedoff)
loanData$LoanStatus[Completed]
loanData$LoanStatus['Completed']
loanData$LoanStatus[1]
loanData$LoanStatus[2]
loanData$LoanStatus[0]
loanData$LoanStatus[3]
loanData$totalUnpaid <- NULL
newPlot <- loanData
revalue(newPlot$LoanStatus, "Chargedoff" = "Unpaid", "Defaulted" = "Unpaid")
library('plyr')
